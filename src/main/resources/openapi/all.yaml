openapi: "3.0.0"
info:
  title: Devstream Omnistream Specification
  version: 0.2.0
servers:
  - url: https://devstream.in/api/v1
paths:
  /user/profile:
    get:
      summary: Retrieve the current user's profile information.
      responses:
        200:
          description: User profile retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
    patch:
      summary: Update user profile details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserProfile"
      responses:
        200:
          description: User profile updated successfully.

  /user/settings:
    get:
      summary: Retrieve user-specific settings.
      responses:
        200:
          description: Settings retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSettings"
    patch:
      summary: Update user-specific settings.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserSettings"
      responses:
        200:
          description: Settings updated successfully.

  /auth/forgot-password:
    post:
      summary: Request a password reset link.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ForgotPasswordRequest"
      responses:
        200:
          description: Password reset request processed successfully.

  /auth/reset-password:
    post:
      summary: Reset the user's password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPasswordRequest"
      responses:
        200:
          description: Password reset successfully.

  /content:
    get:
      summary: List all user content with optional filters.
      parameters:
        - name: filter
          in: query
          schema:
            type: string
          description: Filter content (e.g., by date or platform).
      responses:
        200:
          description: List of content retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentListResponse"

  /content/{contentId}:
    get:
      summary: Retrieve details for a specific piece of content.
      parameters:
        - name: contentId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Content details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentDetails"
    delete:
      summary: Delete a specific piece of content.
      parameters:
        - name: contentId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Content deleted successfully.
        404:
          description: Content not found.

  /content/{contentId}/status:
    get:
      summary: Check the status of a specific piece of content.
      parameters:
        - name: contentId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Content status retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentStatus"

  /content/invite:
    post:
      summary: Invite users to collaborate on content.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollaborationInviteRequest"
      responses:
        200:
          description: Invitation sent successfully.

  /content/invitations:
    get:
      summary: View pending collaboration invitations.
      responses:
        200:
          description: List of pending invitations.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvitationsResponse"
    patch:
      summary: Accept or decline invitations.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InvitationResponse"
      responses:
        200:
          description: Invitation status updated.

  /analytics/content/{contentId}:
    get:
      summary: View analytics for a specific piece of content.
      parameters:
        - name: contentId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Analytics data retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentAnalytics"

  /analytics/user:
    get:
      summary: View overall analytics for the user.
      responses:
        200:
          description: User analytics retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAnalytics"

  /platforms/connect:
    post:
      summary: Connect a new platform.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlatformConnectRequest"
      responses:
        200:
          description: Platform connected successfully.

  /platforms/{platformId}:
    delete:
      summary: Disconnect an existing platform.
      parameters:
        - name: platformId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Platform disconnected successfully.

  /platforms/sync:
    post:
      summary: Sync content from external platforms.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlatformSyncRequest"
      responses:
        200:
          description: Platform sync initiated successfully.
